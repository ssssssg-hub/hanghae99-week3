{"ast":null,"code":"var _jsxFileName = \"/Users/ssg/homework/src/App.js\";\nimport \"./App.css\";\nimport TodoList from \"./pages/TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\n_c = App;\nexport default App; // import logo from \"./logo.svg\";\n// import \"./App.css\";\n// import React, { useState } from \"react\";\n// function App() {\n//   return <Layout />;\n// }\n// //\n// //\n// //\n// //\n// //\n// //\n// function Layout() {\n//   let [todoList, settodoList] = useState([\n//     {\n//       key: 1,\n//       title: \"리액트 공부하기\",\n//       content: \"리액트 기초를 공부해봅시다.\",\n//       isDone: false,\n//     },\n//     {\n//       key: 2,\n//       title: \"과제 해결하기\",\n//       content: \"레이아웃고장\",\n//       isDone: true,\n//     },\n//   ]);\n//   // 각 Todo를 삭제하거나, isDone 변수를 토글해주는 함수\n//   function f_action(key, action) {\n//     if (action === \"delete\") {\n//       settodoList(todoList.filter((e) => e.key !== key));\n//     } else if (action === \"toggle\") {\n//       settodoList(\n//         todoList.map((e) => {\n//           if (e.key === key) e.isDone = !e.isDone;\n//           return e;\n//         })\n//       );\n//     }\n//   }\n//   return (\n//     <div className=\"layout\">\n//       <Header />\n//       <Form todoList={todoList} settodoList={settodoList} />\n//       <List\n//         title=\"Working\"\n//         todoList={todoList.filter((e) => !e.isDone)}\n//         f_action={f_action}\n//       />\n//       <List\n//         title=\"Done\"\n//         todoList={todoList.filter((e) => e.isDone)}\n//         f_action={f_action}\n//       />\n//     </div>\n//   );\n// }\n// function Header() {\n//   return (\n//     <div className=\"header\">\n//       <p>My Todo List</p>\n//       <p>React</p>\n//     </div>\n//   );\n// }\n// //\n// //\n// //\n// function Form({ todoList, settodoList }) {\n//   // 새로운 Todo 입력 및 Form에 남아있는 Value 값을 초기화 시키는 함수\n//   let nextKey = todoList[todoList.length - 1].key + 1;\n//   console.log(nextKey);\n//   const addTodo = (event) => {\n//     event.preventDefault();\n//     settodoList([\n//       ...todoList,\n//       {\n//         key: nextKey,\n//         title: event.target.title.value || \"notitle\",\n//         content: event.target.content.value || \"nocontent\",\n//         isDone: false,\n//       },\n//     ]);\n//     event.target.title.value = \"\";\n//     event.target.content.value = \"\";\n//   };\n//   return (\n//     <div className=\"form\">\n//       <form onSubmit={addTodo}>\n//         <label>제목</label>\n//         <input type=\"text\" name=\"title\" />\n//         <label>내용</label>\n//         <input type=\"text\" name=\"content\" />\n//         <input type=\"submit\" className=\"add\" value=\"추가하기\"></input>\n//       </form>\n//     </div>\n//   );\n// }\n// //\n// //\n// //\n// function List({ title, todoList, f_action }) {\n//   return (\n//     <div className=\"title\">\n//       <span>{title}</span>\n//       <div>\n//         {todoList.map((todoList) => (\n//           <Todo todoList={todoList} f_action={f_action} key={todoList.key} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// function Todo({ todoList, f_action }) {\n//   return (\n//     <>\n//       <div className=\"todo\">\n//         <h2>{todoList.title}</h2>\n//         <span>{todoList.content}</span>\n//         <div className=\"btn\">\n//           <button\n//             className=\"btn1\"\n//             onClick={() => f_action(todoList.key, \"delete\")}\n//           >\n//             삭제하기\n//           </button>\n//           <button\n//             className=\"btn2\"\n//             onClick={() => f_action(todoList.key, \"toggle\")}\n//           >\n//             {todoList.isDone ? \"취소\" : \"완료\"}\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TodoList","App"],"sources":["/Users/ssg/homework/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport TodoList from \"./pages/TodoList\";\n\nfunction App() {\n  return <TodoList />;\n}\n\nexport default App;\n// import logo from \"./logo.svg\";\n// import \"./App.css\";\n// import React, { useState } from \"react\";\n\n// function App() {\n//   return <Layout />;\n// }\n\n// //\n// //\n// //\n// //\n// //\n// //\n\n// function Layout() {\n//   let [todoList, settodoList] = useState([\n//     {\n//       key: 1,\n//       title: \"리액트 공부하기\",\n//       content: \"리액트 기초를 공부해봅시다.\",\n//       isDone: false,\n//     },\n//     {\n//       key: 2,\n//       title: \"과제 해결하기\",\n//       content: \"레이아웃고장\",\n//       isDone: true,\n//     },\n//   ]);\n\n//   // 각 Todo를 삭제하거나, isDone 변수를 토글해주는 함수\n//   function f_action(key, action) {\n//     if (action === \"delete\") {\n//       settodoList(todoList.filter((e) => e.key !== key));\n//     } else if (action === \"toggle\") {\n//       settodoList(\n//         todoList.map((e) => {\n//           if (e.key === key) e.isDone = !e.isDone;\n//           return e;\n//         })\n//       );\n//     }\n//   }\n\n//   return (\n//     <div className=\"layout\">\n//       <Header />\n//       <Form todoList={todoList} settodoList={settodoList} />\n//       <List\n//         title=\"Working\"\n//         todoList={todoList.filter((e) => !e.isDone)}\n//         f_action={f_action}\n//       />\n//       <List\n//         title=\"Done\"\n//         todoList={todoList.filter((e) => e.isDone)}\n//         f_action={f_action}\n//       />\n//     </div>\n//   );\n// }\n\n// function Header() {\n//   return (\n//     <div className=\"header\">\n//       <p>My Todo List</p>\n//       <p>React</p>\n//     </div>\n//   );\n// }\n// //\n// //\n// //\n\n// function Form({ todoList, settodoList }) {\n//   // 새로운 Todo 입력 및 Form에 남아있는 Value 값을 초기화 시키는 함수\n//   let nextKey = todoList[todoList.length - 1].key + 1;\n//   console.log(nextKey);\n//   const addTodo = (event) => {\n//     event.preventDefault();\n//     settodoList([\n//       ...todoList,\n//       {\n//         key: nextKey,\n//         title: event.target.title.value || \"notitle\",\n//         content: event.target.content.value || \"nocontent\",\n//         isDone: false,\n//       },\n//     ]);\n//     event.target.title.value = \"\";\n//     event.target.content.value = \"\";\n//   };\n\n//   return (\n//     <div className=\"form\">\n//       <form onSubmit={addTodo}>\n//         <label>제목</label>\n//         <input type=\"text\" name=\"title\" />\n//         <label>내용</label>\n//         <input type=\"text\" name=\"content\" />\n//         <input type=\"submit\" className=\"add\" value=\"추가하기\"></input>\n//       </form>\n//     </div>\n//   );\n// }\n\n// //\n// //\n// //\n\n// function List({ title, todoList, f_action }) {\n//   return (\n//     <div className=\"title\">\n//       <span>{title}</span>\n//       <div>\n//         {todoList.map((todoList) => (\n//           <Todo todoList={todoList} f_action={f_action} key={todoList.key} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// function Todo({ todoList, f_action }) {\n//   return (\n//     <>\n//       <div className=\"todo\">\n//         <h2>{todoList.title}</h2>\n//         <span>{todoList.content}</span>\n//         <div className=\"btn\">\n//           <button\n//             className=\"btn1\"\n//             onClick={() => f_action(todoList.key, \"delete\")}\n//           >\n//             삭제하기\n//           </button>\n//           <button\n//             className=\"btn2\"\n//             onClick={() => f_action(todoList.key, \"toggle\")}\n//           >\n//             {todoList.isDone ? \"취소\" : \"완료\"}\n//           </button>\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n// export default App;\n"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,kBAArB;;;AAEA,SAASC,GAAT,GAAe;EACb,oBAAO,QAAC,QAAD;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAFQA,G;AAIT,eAAeA,GAAf},"metadata":{},"sourceType":"module"}