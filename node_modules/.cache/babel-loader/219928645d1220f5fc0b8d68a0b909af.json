{"ast":null,"code":"var _jsxFileName = \"/Users/ssg/homework/src/components/layout/Layout.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./style.css\";\nimport Header from \"../header/Header.jsx\";\nimport Form from \"../form/Form.jsx\";\nimport List from \"../list/List.jsx\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  let [todoList, settodoList] = useState([{\n    key: 1,\n    title: \"리액트 공부하기\",\n    content: \"리액트 기초를 공부해봅시다.\",\n    done: false\n  }, {\n    key: 2,\n    title: \"리액트 더 공부하기\",\n    content: \"리액트 심화를 공부해봅시다.\",\n    done: true\n  }]); // 각 Todo를 삭제하거나, done 변수를 토글해주는 함수\n\n  function buttonAction(key, action) {\n    if (action === \"delete\") {\n      settodoList(todoList.filter(e => e.key !== key));\n    } else if (action === \"toggle\") {\n      settodoList(todoList.map(e => {\n        if (e.key === key) e.done = !e.done;\n        return e;\n      }));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"layout\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      todoList: todoList,\n      settodoList: settodoList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      title: \"Working\",\n      todoList: todoList.filter(e => !e.done),\n      buttonAction: buttonAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      title: \"Done\",\n      todoList: todoList.filter(e => e.done),\n      buttonAction: buttonAction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"VjaLTYl/dm1ARq2dO3HEno6Z5NM=\");\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["Header","Form","List","React","useState","Layout","todoList","settodoList","key","title","content","done","buttonAction","action","filter","e","map"],"sources":["/Users/ssg/homework/src/components/layout/Layout.jsx"],"sourcesContent":["import \"./style.css\";\nimport Header from \"../header/Header.jsx\";\nimport Form from \"../form/Form.jsx\";\nimport List from \"../list/List.jsx\";\nimport React, { useState } from \"react\";\n\nfunction Layout() {\n  let [todoList, settodoList] = useState([\n    {\n      key: 1,\n      title: \"리액트 공부하기\",\n      content: \"리액트 기초를 공부해봅시다.\",\n      done: false,\n    },\n    {\n      key: 2,\n      title: \"리액트 더 공부하기\",\n      content: \"리액트 심화를 공부해봅시다.\",\n      done: true,\n    },\n  ]);\n\n  // 각 Todo를 삭제하거나, done 변수를 토글해주는 함수\n  function buttonAction(key, action) {\n    if (action === \"delete\") {\n      settodoList(todoList.filter((e) => e.key !== key));\n    } else if (action === \"toggle\") {\n      settodoList(\n        todoList.map((e) => {\n          if (e.key === key) e.done = !e.done;\n          return e;\n        })\n      );\n    }\n  }\n\n  return (\n    <div className=\"layout\">\n      <Header />\n      <Form todoList={todoList} settodoList={settodoList} />\n      <List\n        title=\"Working\"\n        todoList={todoList.filter((e) => !e.done)}\n        buttonAction={buttonAction}\n      />\n      <List\n        title=\"Done\"\n        todoList={todoList.filter((e) => e.done)}\n        buttonAction={buttonAction}\n      />\n    </div>\n  );\n}\n\nexport default Layout;\n"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EAChB,IAAI,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC,CACrC;IACEI,GAAG,EAAE,CADP;IAEEC,KAAK,EAAE,UAFT;IAGEC,OAAO,EAAE,iBAHX;IAIEC,IAAI,EAAE;EAJR,CADqC,EAOrC;IACEH,GAAG,EAAE,CADP;IAEEC,KAAK,EAAE,YAFT;IAGEC,OAAO,EAAE,iBAHX;IAIEC,IAAI,EAAE;EAJR,CAPqC,CAAD,CAAtC,CADgB,CAgBhB;;EACA,SAASC,YAAT,CAAsBJ,GAAtB,EAA2BK,MAA3B,EAAmC;IACjC,IAAIA,MAAM,KAAK,QAAf,EAAyB;MACvBN,WAAW,CAACD,QAAQ,CAACQ,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACP,GAAF,KAAUA,GAAjC,CAAD,CAAX;IACD,CAFD,MAEO,IAAIK,MAAM,KAAK,QAAf,EAAyB;MAC9BN,WAAW,CACTD,QAAQ,CAACU,GAAT,CAAcD,CAAD,IAAO;QAClB,IAAIA,CAAC,CAACP,GAAF,KAAUA,GAAd,EAAmBO,CAAC,CAACJ,IAAF,GAAS,CAACI,CAAC,CAACJ,IAAZ;QACnB,OAAOI,CAAP;MACD,CAHD,CADS,CAAX;IAMD;EACF;;EAED,oBACE;IAAK,SAAS,EAAC,QAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,IAAD;MAAM,QAAQ,EAAET,QAAhB;MAA0B,WAAW,EAAEC;IAAvC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,IAAD;MACE,KAAK,EAAC,SADR;MAEE,QAAQ,EAAED,QAAQ,CAACQ,MAAT,CAAiBC,CAAD,IAAO,CAACA,CAAC,CAACJ,IAA1B,CAFZ;MAGE,YAAY,EAAEC;IAHhB;MAAA;MAAA;MAAA;IAAA,QAHF,eAQE,QAAC,IAAD;MACE,KAAK,EAAC,MADR;MAEE,QAAQ,EAAEN,QAAQ,CAACQ,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACJ,IAAzB,CAFZ;MAGE,YAAY,EAAEC;IAHhB;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA9CQP,M;;KAAAA,M;AAgDT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}